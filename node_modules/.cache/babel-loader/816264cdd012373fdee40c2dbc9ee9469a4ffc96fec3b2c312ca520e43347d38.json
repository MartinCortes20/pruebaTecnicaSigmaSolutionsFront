{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { fetchUsers } from '../services/api';\nexport const useUsers = () => {\n  _s();\n  // Estados\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Configuración de paginación\n  const USERS_PER_PAGE = 6;\n\n  /**\n   * Carga inicial de usuarios\n   */\n  const loadUsers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const userData = await fetchUsers();\n      setUsers(userData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error loading users:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Filtrado de usuarios por nombre (optimizado con useMemo)\n   */\n  const filteredUsers = useMemo(() => {\n    if (!searchTerm.trim()) return users;\n    return users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [users, searchTerm]);\n\n  /**\n   * Paginación de usuarios filtrados (optimizado con useMemo)\n   */\n  const paginatedUsers = useMemo(() => {\n    const startIndex = (currentPage - 1) * USERS_PER_PAGE;\n    const endIndex = startIndex + USERS_PER_PAGE;\n    return filteredUsers.slice(startIndex, endIndex);\n  }, [filteredUsers, currentPage]);\n\n  /**\n   * Cálculo del total de páginas\n   */\n  const totalPages = useMemo(() => {\n    return Math.ceil(filteredUsers.length / USERS_PER_PAGE);\n  }, [filteredUsers.length]);\n\n  /**\n   * Maneja el cambio en el término de búsqueda\n   */\n  const handleSearchChange = useCallback(term => {\n    setSearchTerm(term);\n    setCurrentPage(1); // Resetear a la primera página al buscar\n  }, []);\n\n  /**\n   * Maneja el cambio de página\n   */\n  const handlePageChange = useCallback(page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  }, [totalPages]);\n\n  /**\n   * Reinicia la búsqueda y paginación\n   */\n  const resetSearch = useCallback(() => {\n    setSearchTerm('');\n    setCurrentPage(1);\n  }, []);\n\n  // Efecto para cargar usuarios al montar el componente\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  // API pública del hook\n  return {\n    // Estados\n    users: paginatedUsers,\n    allUsers: users,\n    filteredUsers,\n    loading,\n    error,\n    searchTerm,\n    currentPage,\n    totalPages,\n    // Estadísticas útiles\n    totalUsers: users.length,\n    filteredCount: filteredUsers.length,\n    hasNextPage: currentPage < totalPages,\n    hasPrevPage: currentPage > 1,\n    // Métodos\n    handleSearchChange,\n    handlePageChange,\n    resetSearch,\n    loadUsers\n  };\n};\n_s(useUsers, \"G4y6Zf0bBhi3doLN4AWVv6feXBI=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","fetchUsers","useUsers","_s","users","setUsers","loading","setLoading","error","setError","searchTerm","setSearchTerm","currentPage","setCurrentPage","USERS_PER_PAGE","loadUsers","userData","err","message","console","filteredUsers","trim","filter","user","name","toLowerCase","includes","paginatedUsers","startIndex","endIndex","slice","totalPages","Math","ceil","length","handleSearchChange","term","handlePageChange","page","resetSearch","allUsers","totalUsers","filteredCount","hasNextPage","hasPrevPage"],"sources":["/Users/martinfranciscocortesbuendia/Desktop/pruebaTecnicaSigma/src/hooks/useUsers.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { fetchUsers } from '../services/api';\n\n\n\nexport const useUsers = () => {\n  // Estados\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  \n  // Configuración de paginación\n  const USERS_PER_PAGE = 6;\n\n  /**\n   * Carga inicial de usuarios\n   */\n  const loadUsers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const userData = await fetchUsers();\n      setUsers(userData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error loading users:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Filtrado de usuarios por nombre (optimizado con useMemo)\n   */\n  const filteredUsers = useMemo(() => {\n    if (!searchTerm.trim()) return users;\n    \n    return users.filter(user =>\n      user.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [users, searchTerm]);\n\n  /**\n   * Paginación de usuarios filtrados (optimizado con useMemo)\n   */\n  const paginatedUsers = useMemo(() => {\n    const startIndex = (currentPage - 1) * USERS_PER_PAGE;\n    const endIndex = startIndex + USERS_PER_PAGE;\n    return filteredUsers.slice(startIndex, endIndex);\n  }, [filteredUsers, currentPage]);\n\n  /**\n   * Cálculo del total de páginas\n   */\n  const totalPages = useMemo(() => {\n    return Math.ceil(filteredUsers.length / USERS_PER_PAGE);\n  }, [filteredUsers.length]);\n\n  /**\n   * Maneja el cambio en el término de búsqueda\n   */\n  const handleSearchChange = useCallback((term) => {\n    setSearchTerm(term);\n    setCurrentPage(1); // Resetear a la primera página al buscar\n  }, []);\n\n  /**\n   * Maneja el cambio de página\n   */\n  const handlePageChange = useCallback((page) => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  }, [totalPages]);\n\n  /**\n   * Reinicia la búsqueda y paginación\n   */\n  const resetSearch = useCallback(() => {\n    setSearchTerm('');\n    setCurrentPage(1);\n  }, []);\n\n  // Efecto para cargar usuarios al montar el componente\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  // API pública del hook\n  return {\n    // Estados\n    users: paginatedUsers,\n    allUsers: users,\n    filteredUsers,\n    loading,\n    error,\n    searchTerm,\n    currentPage,\n    totalPages,\n    \n    // Estadísticas útiles\n    totalUsers: users.length,\n    filteredCount: filteredUsers.length,\n    hasNextPage: currentPage < totalPages,\n    hasPrevPage: currentPage > 1,\n    \n    // Métodos\n    handleSearchChange,\n    handlePageChange,\n    resetSearch,\n    loadUsers,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}